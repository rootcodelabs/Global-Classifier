declaration:
  call: declare
  version: 0.1
  description: "Description placeholder for 'TOKEN'"
  method: get
  accepts: json
  returns: json
  namespace: classifier

get_refresh_token:
  call: http.post
  args:
    url: "[#CLASSIFIER_RESQL]/get-token"
    body:
      platform: 'OUTLOOK'
  result: res
  next: set_refresh_token

set_refresh_token:
  assign:
    refresh_token: ${res.response.body[0].token}
  next: check_refresh_token

check_refresh_token:
  switch:
    - condition: ${refresh_token !== null}
      next: decrypt_token
  next: return_not_found

decrypt_token:
  call: http.post
  args:
    url: "[#CLASSIFIER_DMAPPER]/hbs/classifier/return_decrypted_outlook_token"
    headers:
      type: json
    body:
      token: ${refresh_token}
  result: token_data
  next: get_access_token

get_access_token:
  call: http.post
  args:
    url: "https://login.microsoftonline.com/common/oauth2/v2.0/token"
    contentType: formdata
    headers:
      type: json
    body:
      client_id: "[#OUTLOOK_CLIENT_ID]"
      scope: "User.Read Mail.ReadWrite MailboxSettings.ReadWrite offline_access"
      refresh_token: ${token_data.response.body.token.content}
      grant_type: "refresh_token"
      client_secret: "[#OUTLOOK_SECRET_KEY]"
  result: res
  next: return_result

return_result:
  return: ${res.response.body}
  next: end

return_not_found:
  status: 404
  return: "refresh token not found"
  next: end