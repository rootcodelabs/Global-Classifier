declaration:
  call: declare
  version: 0.1
  description: "Description placeholder for 'METADATA'"
  method: get
  accepts: json
  returns: json
  namespace: classifier
  allowlist:
    params:
      - field: modelId
        type: number
        description: "Parameter 'modelId'"

extract_data:
  assign:
    model_id: ${Number(incoming.params.modelId)}
  next: get_data_model_meta_data_by_id

get_data_model_meta_data_by_id:
  call: http.post
  args:
    url: "[#CLASSIFIER_RESQL]/get-data-model-metadata-by-id"
    body:
      id: ${model_id}
  result: res_model
  next: check_status

check_status:
  switch:
    - condition: ${200 <= res_model.response.statusCodeValue && res_model.response.statusCodeValue < 300}
      next: check_data_exist
  next: assign_fail_response

check_data_exist:
  switch:
    - condition: ${res_model.response.body.length>0}
      next: assign_success_response
  next: assign_fail_response

assign_success_response:
  assign:
    format_res: {
      operationSuccessful: true,
      data: '${res_model.response.body}'
    }
  next: return_ok

assign_fail_response:
  assign:
    format_res: {
      operationSuccessful: false,
      data: '${[]}'
    }
  next: return_bad_request

return_ok:
  status: 200
  return: ${format_res}
  next: end

return_bad_request:
  status: 400
  return: ${format_res}
  next: end